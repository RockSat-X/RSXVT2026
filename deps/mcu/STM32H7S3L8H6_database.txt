(
    (systick_reload           (SysTick LOAD RELOAD   ) (.minmax 1 `(1 << 24) - 1`))
    (systick_use_cpu_ck       (SysTick CTRL CLKSOURCE))
    (systick_counter          (SysTick VAL  CURRENT  ) (.minmax 0 `(1 << 32) - 1`))
    (systick_interrupt_enable (SysTick CTRL TICKINT  ))
    (systick_enable           (SysTick CTRL ENABLE   ))

    # @/pg 354/fig 40/`H7S3rm`.
    (PLL_UNITS (.value (
        (1 (p q   s  ))
        (2 (p q r s t))
        (3 (p q r s  ))
    )))

    # @/pg 378/fig 51/`H7S3rm`.
    (APB_UNITS (.value (1 2 4 5)))

    # @/pg 61/tbl 13/`H7S3ds`.
    (TIMERS (.value (1 2 3 4 5 6 7 9 12 13 14 15 16 17)))

    # @/pg 392/fig 54/`H7S3rm`. TODO SPI23, SPI6
    (SPIS (.value ((1) (4 5))))

    # @/pg 393/fig 55/`H7S3rm`. TODO I2C23.
    (I2CS (.value ((1))))

    # @/pg 394/fig 56/`H7S3rm`. TODO LPUART1?
    (UXARTS (.value (
        ((usart 1))
        ((usart 2) (usart 3) (uart 4) (uart 5) (uart 7) (uart 8))
    )))

    # @/pg 63/sec 3.36.5/`H7S3ds`.
    (IWDG_COUNTER_FREQ (.value 32_000))

    (sdmmc_kernel_freq (.minmax 0           200_000_000)) # @/pg 39/tbl 6/`H7S3ds`.
    (cpu_freq          (.minmax 0           600_000_000)) # @/pg 158/tbl 26/`H7S3ds`. TODO We're assuming a high internal voltage. TODO 600MHz only when ECC is disabled.
    (axi_ahb_freq      (.minmax 0           300_000_000)) # "
    (apb_freq          (.minmax 0           150_000_000)) # "
    (pll_channel_freq  (.minmax 1_500_000   600_000_000)) # @/pg 200/tbl 64/`H7S3ds`. TODO We're assuming a high internal voltage.
    (pll_vco_freq      (.minmax 192_000_000 836_000_000)) # "                         TODO Assuming wide frequency range.

    # @/pg 245/sec 5.9.1/`H7S3rm`.
    (flash_programming_delay (FLASH ACR WRHIGHFREQ) (.value (
        0b00
        0b11
    )))
    (flash_latency (FLASH ACR LATENCY) (.minmax 0b0000 0b1111))

    # @/pg 407/tbl 67/`H7S3rm`.
    (timer_hclk_ratio (.value (
        ((0b000 0b0) `1    `)
        ((0b001 0b0) `1    `)
        ((0b010 0b0) `1    `)
        ((0b011 0b0) `1    `)
        ((0b100 0b0) `1    `)
        ((0b101 0b0) `1 / 2`)
        ((0b110 0b0) `1 / 4`)
        ((0b111 0b0) `1 / 8`)
        ((0b000 0b1) `1    `)
        ((0b001 0b1) `1    `)
        ((0b010 0b1) `1    `)
        ((0b011 0b1) `1    `)
        ((0b100 0b1) `1    `)
        ((0b101 0b1) `1    `)
        ((0b110 0b1) `1 / 2`)
        ((0b111 0b1) `1 / 4`)
    )))

    (current_active_vos       (PWR SR1  ACTVOS   )) # @/pg 320/sec 6.8.2/`H7S3rm`.
    (current_active_vos_ready (PWR SR1  ACTVOSRDY)) # "
    (smps_output_level        (PWR CSR2 SDHILEVEL)) # @/pg 323/sec 6.8.4/`H7S3rm`.
    (smps_forced_on           (PWR CSR2 SMPSEXTHP)) # "
    (smps_enable              (PWR CSR2 SDEN     )) # "
    (ldo_enable               (PWR CSR2 LDOEN    )) # "
    (power_management_bypass  (PWR CSR2 BYPASS   )) # "
    (internal_voltage_scaling (PWR CSR4 VOS      )) # @/pg 327/sec 6.8.6/`H7S3rm`.

    # @/pg 424/sec 7.8.1/`H7S3rm`.
    (pll{UNIT}_ready  (RCC CR PLL3RDY ) (UNIT = 3))
    (pll{UNIT}_enable (RCC CR PLL3ON  ) (UNIT = 3))
    (pll{UNIT}_ready  (RCC CR PLL2RDY ) (UNIT = 2))
    (pll{UNIT}_enable (RCC CR PLL2ON  ) (UNIT = 2))
    (pll{UNIT}_ready  (RCC CR PLL1RDY ) (UNIT = 1))
    (pll{UNIT}_enable (RCC CR PLL1ON  ) (UNIT = 1))
    (hsi48_ready      (RCC CR HSI48RDY)           )
    (hsi48_enable     (RCC CR HSI48ON )           )
    (csi_ready        (RCC CR CSIRDY  )           )
    (csi_enable       (RCC CR CSION   )           )

    # @/pg 431/sec 7.8.6/`H7S3rm`.
    (mco1_clock_source (RCC CFGR MCO1SEL) (.value (
        (hsi_ck     0b000)
        (lse_ck     0b001)
        (hse_ck     0b010)
        (pll1_q_ck  0b011)
        (hsi48_ck   0b100)
    )))
    (mco1_divider (RCC CFGR MCO1PRE) (.minmax 0b0000 0b1111))
    (global_timer_prescaler (RCC CFGR TIMPRE) (.value (
        0b0
        0b1
    )))
    (effective_scgu_clock_source (RCC CFGR SWS) (.value (
        (hsi_ck    0b000)
        (csi_ck    0b001)
        (hse_ck    0b010)
        (pll1_p_ck 0b011)
    )))
    (scgu_clock_source (RCC CFGR SW) (.value (
        (hsi_ck    0b000)
        (csi_ck    0b001)
        (hse_ck    0b010)
        (pll1_p_ck 0b011)
    )))

    # @/pg 434/sec 7.8.7/`H7S3rm`.
    (cpu_divider (RCC CDCFGR CPRE) (.value (
        (1   0b0000) # Low three bits are don't-care.
        (2   0b1000)
        (4   0b1001)
        (8   0b1010)
        (16  0b1011)
        (64  0b1100)
        (128 0b1101)
        (256 0b1110)
        (512 0b1111)
    )))

    # @/pg 435/sec 7.8.8/`H7S3rm`.
    (axi_ahb_divider (RCC BMCFGR BMPRE) (.value (
        (1   0b0000) # Low three bits are don't-care.
        (2   0b1000)
        (4   0b1001)
        (8   0b1010)
        (16  0b1011)
        (64  0b1100)
        (128 0b1101)
        (256 0b1110)
        (512 0b1111)
    )))

    # @/pg 436/sec 7.8.9/`H7S3rm`.
    (apb{UNIT}_divider (RCC APBCFGR PPRE5) (.value ((1 0b000) (2 0b100) (4 0b101) (8 0b110) (16 0b111))) (UNIT = 5))
    (apb{UNIT}_divider (RCC APBCFGR PPRE4) (.value ((1 0b000) (2 0b100) (4 0b101) (8 0b110) (16 0b111))) (UNIT = 4))
    (apb{UNIT}_divider (RCC APBCFGR PPRE2) (.value ((1 0b000) (2 0b100) (4 0b101) (8 0b110) (16 0b111))) (UNIT = 2))
    (apb{UNIT}_divider (RCC APBCFGR PPRE1) (.value ((1 0b000) (2 0b100) (4 0b101) (8 0b110) (16 0b111))) (UNIT = 1))

    # @/pg 440/sec 7.8.11/`H7S3rm`.
    (pll{UNIT}_input_range (RCC PLLCFGR PLL3RGE) (UNIT = 3) (.value (
        ( 1_000_000 None)
        ( 2_000_000 None) # Can be '0b00', but only for medium VCO.
        ( 4_000_000 0b01)
        ( 8_000_000 0b10)
        (16_000_000 0b11)
    )))
    (pll{UNIT}_input_range (RCC PLLCFGR PLL2RGE) (UNIT = 2) (.value (
        ( 1_000_000 None)
        ( 2_000_000 None) # Can be '0b00', but only for medium VCO.
        ( 4_000_000 0b01)
        ( 8_000_000 0b10)
        (16_000_000 0b11)
    )))
    (pll{UNIT}_input_range (RCC PLLCFGR PLL1RGE) (UNIT = 1) (.value (
        ( 1_000_000 None)
        ( 2_000_000 None) # Can be '0b00', but only for medium VCO.
        ( 4_000_000 0b01)
        ( 8_000_000 0b10)
        (16_000_000 0b11)
    )))

    # @/pg 438/sec 7.8.10/`H7S3rm`.
    (pll{UNIT}_predivider (RCC PLLCKSELR DIVM1) (.minmax 1 63) (UNIT = 1))
    (pll{UNIT}_predivider (RCC PLLCKSELR DIVM2) (.minmax 1 63) (UNIT = 2))
    (pll{UNIT}_predivider (RCC PLLCKSELR DIVM3) (.minmax 1 63) (UNIT = 3))

    # @/pg 440/sec 7.8.11/`H7S3rm`.
    (pll{UNIT}{CHANNEL}_enable (RCC PLLCFGR PLL1PEN) (UNIT = 1) (CHANNEL = p))
    (pll{UNIT}{CHANNEL}_enable (RCC PLLCFGR PLL1QEN) (UNIT = 1) (CHANNEL = q))
    (pll{UNIT}{CHANNEL}_enable (RCC PLLCFGR PLL1SEN) (UNIT = 1) (CHANNEL = s))
    (pll{UNIT}{CHANNEL}_enable (RCC PLLCFGR PLL2PEN) (UNIT = 2) (CHANNEL = p))
    (pll{UNIT}{CHANNEL}_enable (RCC PLLCFGR PLL2QEN) (UNIT = 2) (CHANNEL = q))
    (pll{UNIT}{CHANNEL}_enable (RCC PLLCFGR PLL2REN) (UNIT = 2) (CHANNEL = r))
    (pll{UNIT}{CHANNEL}_enable (RCC PLLCFGR PLL2SEN) (UNIT = 2) (CHANNEL = s))
    (pll{UNIT}{CHANNEL}_enable (RCC PLLCFGR PLL2TEN) (UNIT = 2) (CHANNEL = t))
    (pll{UNIT}{CHANNEL}_enable (RCC PLLCFGR PLL3PEN) (UNIT = 3) (CHANNEL = p))
    (pll{UNIT}{CHANNEL}_enable (RCC PLLCFGR PLL3QEN) (UNIT = 3) (CHANNEL = q))
    (pll{UNIT}{CHANNEL}_enable (RCC PLLCFGR PLL3REN) (UNIT = 3) (CHANNEL = r))
    (pll{UNIT}{CHANNEL}_enable (RCC PLLCFGR PLL3SEN) (UNIT = 3) (CHANNEL = s))
    (pll_clock_source (RCC PLLCKSELR PLLSRC) (.value (
        (hsi_ck 0b00)
        (csi_ck 0b01)
        (hse_ck 0b10)
        (None   0b11)
    )))

    (pll{UNIT}_multiplier       (RCC PLL1DIVR1 DIVN) (.minmax 12 420) (UNIT = 1)              ) # @/pg 443/sec 7.8.12/`H7S3rm`.
    (pll{UNIT}{CHANNEL}_divider (RCC PLL1DIVR1 DIVQ) (.minmax 1  128) (UNIT = 1) (CHANNEL = q)) # "
    (pll{UNIT}{CHANNEL}_divider (RCC PLL1DIVR1 DIVP) (.minmax 1  128) (UNIT = 1) (CHANNEL = p)) # "
    (pll{UNIT}{CHANNEL}_divider (RCC PLL1DIVR2 DIVS) (.minmax 1  128) (UNIT = 1) (CHANNEL = s)) # @/pg 445/sec 7.8.13/`H7S3rm`.

    (pll{UNIT}_multiplier       (RCC PLL2DIVR1 DIVN) (.minmax 12 420) (UNIT = 2)              ) # @/pg 448/sec 7.8.16/`H7S3rm`.
    (pll{UNIT}{CHANNEL}_divider (RCC PLL2DIVR1 DIVR) (.minmax 1  128) (UNIT = 2) (CHANNEL = r)) # "
    (pll{UNIT}{CHANNEL}_divider (RCC PLL2DIVR1 DIVQ) (.minmax 1  128) (UNIT = 2) (CHANNEL = q)) # "
    (pll{UNIT}{CHANNEL}_divider (RCC PLL2DIVR1 DIVP) (.minmax 1  128) (UNIT = 2) (CHANNEL = p)) # "
    (pll{UNIT}{CHANNEL}_divider (RCC PLL2DIVR2 DIVT) (.minmax 1  128) (UNIT = 2) (CHANNEL = t)) # @/pg 450/sec 7.8.17/`H7S3rm`.
    (pll{UNIT}{CHANNEL}_divider (RCC PLL2DIVR2 DIVS) (.minmax 1  128) (UNIT = 2) (CHANNEL = s)) # "

    (pll{UNIT}_multiplier       (RCC PLL3DIVR1 DIVN) (.minmax 12 420) (UNIT = 3)              ) # @/pg 453/sec 7.8.20/`H7S3rm`.
    (pll{UNIT}{CHANNEL}_divider (RCC PLL3DIVR1 DIVR) (.minmax 1  128) (UNIT = 3) (CHANNEL = r)) # "
    (pll{UNIT}{CHANNEL}_divider (RCC PLL3DIVR1 DIVQ) (.minmax 1  128) (UNIT = 3) (CHANNEL = q)) # "
    (pll{UNIT}{CHANNEL}_divider (RCC PLL3DIVR1 DIVP) (.minmax 1  128) (UNIT = 3) (CHANNEL = p)) # "
    (pll{UNIT}{CHANNEL}_divider (RCC PLL3DIVR2 DIVS) (.minmax 1  128) (UNIT = 3) (CHANNEL = s)) # @/pg 455/sec 7.8.21/`H7S3rm`.

    # @/pg 458/sec 7.8.24/`H7S3rm`. TODO hse_ck.
    (per_ck_source (RCC CCIPR1 CKPERSEL) (.value (
        (hsi_ck 0b00)
        (csi_ck 0b01)
        (None   0b11)
    )))

    (timer_{UNIT}_divider    (TIM1  PSC PSC) (.minmax 1 `1 << 16`) (UNIT = 1 )) # @/pg 1743/sec 41.6.13/`H7S3rm`.
    (timer_{UNIT}_modulation (TIM1  ARR ARR) (.minmax 1 `1 << 20`) (UNIT = 1 )) # @/pg 1744/sec 41.6.14/`H7S3rm`.

    (timer_{UNIT}_divider    (TIM2  PSC PSC) (.minmax 1 `1 << 16`) (UNIT = 2 )) # @/pg 1867/sec 42.5.13/`H7S3rm`.
    (timer_{UNIT}_divider    (TIM3  PSC PSC) (.minmax 1 `1 << 16`) (UNIT = 3 )) # "
    (timer_{UNIT}_divider    (TIM4  PSC PSC) (.minmax 1 `1 << 16`) (UNIT = 4 )) # "
    (timer_{UNIT}_divider    (TIM5  PSC PSC) (.minmax 1 `1 << 16`) (UNIT = 5 )) # "
    (timer_{UNIT}_modulation (TIM2  ARR ARR) (.minmax 1 `1 << 32`) (UNIT = 2 )) # @/pg 1868/sec 42.5.14/`H7S3rm`.
    (timer_{UNIT}_modulation (TIM3  ARR ARR) (.minmax 1 `1 << 32`) (UNIT = 3 )) # "
    (timer_{UNIT}_modulation (TIM4  ARR ARR) (.minmax 1 `1 << 32`) (UNIT = 4 )) # "
    (timer_{UNIT}_modulation (TIM5  ARR ARR) (.minmax 1 `1 << 32`) (UNIT = 5 )) # "

    (timer_{UNIT}_divider    (TIM6  PSC PSC) (.minmax 1 `1 << 16`) (UNIT = 6 )) # @/pg 1897/sec 43.4.7/`H7S3rm`.
    (timer_{UNIT}_divider    (TIM7  PSC PSC) (.minmax 1 `1 << 16`) (UNIT = 7 )) # "
    (timer_{UNIT}_modulation (TIM6  ARR ARR) (.minmax 1 `1 << 20`) (UNIT = 6 )) # @/pg 1897/sec 43.4.8/`H7S3rm`.
    (timer_{UNIT}_modulation (TIM7  ARR ARR) (.minmax 1 `1 << 20`) (UNIT = 7 )) # "

    (timer_{UNIT}_divider    (TIM9  PSC PSC) (.minmax 1 `1 << 16`) (UNIT = 9 )) # @/pg 1944/sec 44.7.11/`H7S3rm`.
    (timer_{UNIT}_divider    (TIM12 PSC PSC) (.minmax 1 `1 << 16`) (UNIT = 12)) # "
    (timer_{UNIT}_modulation (TIM9  ARR ARR) (.minmax 1 `1 << 20`) (UNIT = 9 )) # @/pg 1944/sec 44.7.12/`H7S3rm`.
    (timer_{UNIT}_modulation (TIM12 ARR ARR) (.minmax 1 `1 << 20`) (UNIT = 12)) # "

    (timer_{UNIT}_divider    (TIM13 PSC PSC) (.minmax 1 `1 << 16`) (UNIT = 13)) # @/pg 1957/sec 44.8.9/`H7S3rm`.
    (timer_{UNIT}_divider    (TIM14 PSC PSC) (.minmax 1 `1 << 16`) (UNIT = 14)) # "
    (timer_{UNIT}_modulation (TIM13 ARR ARR) (.minmax 1 `1 << 20`) (UNIT = 13)) # @/pg 1957/sec 44.8.10/`H7S3rm`.
    (timer_{UNIT}_modulation (TIM14 ARR ARR) (.minmax 1 `1 << 20`) (UNIT = 14)) # "

    (timer_{UNIT}_divider    (TIM15 PSC PSC) (.minmax 1 `1 << 16`) (UNIT = 15)) # @/pg 2025/sec 45.7.11/`H7S3rm`.
    (timer_{UNIT}_modulation (TIM15 ARR ARR) (.minmax 1 `1 << 20`) (UNIT = 15)) # @/pg 2026/sec 45.7.12/`H7S3rm`.

    (timer_{UNIT}_divider    (TIM16 PSC PSC) (.minmax 1 `1 << 16`) (UNIT = 16)) # @/pg 2051/sec 45.8.10/`H7S3rm`.
    (timer_{UNIT}_divider    (TIM17 PSC PSC) (.minmax 1 `1 << 16`) (UNIT = 17)) # "
    (timer_{UNIT}_modulation (TIM16 ARR ARR) (.minmax 1 `1 << 20`) (UNIT = 16)) # @/pg 2052/sec 45.8.11/`H7S3rm`.
    (timer_{UNIT}_modulation (TIM17 ARR ARR) (.minmax 1 `1 << 20`) (UNIT = 17)) # "

    # @/pg 458/sec 7.8.24/`H7S3rm`.
    (sdmmc_clock_source (RCC CCIPR1 SDMMC12SEL) (.value (
        (pll2_s_ck 0b0)
        (pll2_t_ck 0b1)
    )))

    # @/pg 461/sec 7.8.25/`H7S3rm`.
    (i2c_{UNITS}_clock_source (RCC CCIPR2 I2C1_I3C1SEL) (UNITS = (1)) (.value (
        (apb1_ck    0b00)
        (pll3_r_ck  0b01)
        (hsi_ck     0b10)
        (csi_ck     0b11)
    )))
    (uxart_{UNITS}_clock_source (RCC CCIPR2 UART234578SEL) (UNITS = ((usart 2) (usart 3) (uart 4) (uart 5) (uart 7) (uart 8))) (.value (
        (apb2_ck    0b000)
        (pll2_q_ck  0b001)
        (pll3_q_ck  0b010)
        (hsi_ck     0b011)
        (csi_ck     0b100)
        (lse_ck     0b101)
    )))

    # @/pg 463/sec 7.8.26/`H7S3rm`. TODO SPI1SEL: i2s_ckin TODO SPI45: hse_ck
    (spi_{UNITS}_clock_source (RCC CCIPR3 SPI1SEL) (UNITS = (1)) (.value (
        (pll1_q_ck 0b000)
        (pll2_p_ck 0b001)
        (pll3_p_ck 0b010)
        (per_ck    0b100)
    )))
    (spi_{UNITS}_clock_source (RCC CCIPR3 SPI45SEL) (UNITS = (4 5)) (.value (
        (apb2_ck   0b000)
        (pll2_q_ck 0b001)
        (pll3_q_ck 0b010)
        (hsi_ck    0b011)
        (csi_ck    0b100)
    )))
    (uxart_{UNITS}_clock_source (RCC CCIPR3 USART1SEL) (UNITS = ((usart 1))) (.value (
        (apb2_ck   0b000)
        (pll2_q_ck 0b001)
        (pll3_q_ck 0b010)
        (hsi_ck    0b011)
        (csi_ck    0b100)
        (lse_ck    0b101)
    )))

    # @/pg 501/sec 7.8.48/`H7S3rm`.
    (GPIO_PORT_ENABLE_REGISTER (.value AHB4ENR))

    # @/pg 505/sec 7.8.50/`H7S3rm`.
    (uxart_{UNIT}_enable (RCC APB1ENR1 USART3EN) (UNIT = 3))

    # @/pg 583/sec 10.4.1/`H7S3rm`.
    (GPIO_MODE (.value (
        (input     0b00)
        (output    0b01)
        (alternate 0b10)
        (analog    0b11)
    )))

    # @/pg 583/sec 10.4.3/`H7S3rm`.
    (GPIO_SPEED (.value (
        (low       0b00)
        (medium    0b01)
        (high      0b10)
        (very_high 0b11)
    )))

    # @/pg 584/sec 10.4.4/`H7S3rm`.
    (GPIO_PULL (.value (
        (None  0b00)
        (up    0b01)
        (down  0b10)
    )))

    # @/pg 2134/sec 48.7.1/`H7S3rm`.
    (iwdg_key (IWDG KR KEY) (.value (
        0xAAAA
        0x5555
        0xCCCC
    )))

    # @/pg 2134/sec 48.7.2/`H7S3rm`.
    (iwdg_divider (IWDG PR PR) (.value (
        (4   0b000)
        (8   0b001)
        (16  0b010)
        (32  0b011)
        (64  0b100)
        (128 0b101)
        (256 0b110) # Bit-pattern 0b111 is also the same 256 prescaler.
    )))

    # @/pg 2135/sec 48.7.3/`H7S3rm`.
    (iwdg_reload (IWDG RLR RL) (.minmax 0 `(1 << 12) - 1`))

    # @/pg 2135/sec 48.7.4/`H7S3rm`.
    (iwdg_window_.value_updating  (IWDG SR WVU))
    (iwdg_reload_.value_updating  (IWDG SR RVU))
    (iwdg_divider_.value_updating (IWDG SR PVU))

    # @/pg 2287/sec 51.9.5/`H7S3rm`.
    (i2c_PRESC (I2C TIMINGR PRESC) (.minmax 0 `(1 << 4) - 1`))
    (i2c_SCLH  (I2C TIMINGR SCLH ) (.minmax 0 `(1 << 8) - 1`))
    (i2c_SCLL  (I2C TIMINGR SCLL ) (.minmax 0 `(1 << 8) - 1`))

    # @/pg 2476/sec 53.8.6/`H7S3rm`.
    (uxart_baud_divider (USART BRR BRR) (.minmax 1 `1 << 16`))

    # @/pg 2610/sec 55.11.3/`H7S3rm`.
    (spi_baud_divider (SPI CFG1 MBR) (.value (
        (2   0b000)
        (4   0b001)
        (8   0b010)
        (16  0b011)
        (32  0b100)
        (64  0b101)
        (128 0b110)
        (256 0b111)
    )))

    (sdmmc_CLKDIV   (SDMMC CLKCR  CLKDIV  ) (.minmax 0 1023           )) # @/pg 2799/sec 59.10.3/`H7S3rm`.
    (sdmmc_DATATIME (SDMMC DTIMER DATATIME) (.minmax 0 `(1 << 32) - 1`)) # @/pg 2804/sec 59.10.7/`H7S3rm`.

    # @/pg 3683/sec 66.8.1/`H7S3rm`.
    (iwdg_stopped_during_debug (DBGMCU APB4FZR DBG_IWDG))
)
